{"version":3,"sources":["global.js","config.js","api/auth.js","components/Login/Login.js","components/Pet/Pet.js","components/Intro/Intro.js","components/Navigation.js","components/Signup/Signup.js","components/About.js","helper.js","api/user.js","api/admin.js","components/userApplication/userApplication.js","components/Applications/Applications.js","components/PetPosting/PetPosting.js","components/Profile/InfoSection/InfoSection.js","components/Profile/PreferencesSection/PreferencesSection.js","components/Profile/ApplicationSection/ApplicationSection.js","components/Profile/Profile.js","components/PostSwiper/PostCard.js","components/PostSwiper/PostSwiper.js","components/AdminApplications/AdminApplications.js","components/Questionnaire/UserQuest.js","components/Questionnaire/Questionnaire.js","components/Questionnaire/QuestionnaireAdmin.js","components/Logout.js","App.js","reportWebVitals.js","index.js"],"names":["global","isLoggedIn","isClinic","process","env","api_host","API_HOST","ENV","apiCheckSession","app","a","axios","get","session","data","apiLogin","email","password","reqBody","post","res","console","log","apiSignUp","userData","apiLogout","Login","props","state","handleSubmit","bind","this","length","event","preventDefault","localStorage","setItem","setState","currUser","user","admin","history","push","alert","className","Form","onSubmit","Group","style","color","size","controlId","Label","Control","autoFocus","type","placeholder","value","onChange","e","target","href","Button","block","backgroundColor","borderColor","disabled","validateForm","React","Component","Pet","Card","width","height","cardHeight","Img","variant","src","imgSrc","imgHeight","Body","Title","name","Subtitle","breed","Text","addInfo","comments","defaultProps","Intro","onClick","loadLogin","loadSignUp","Carousel","indicators","Item","interval","CardDeck","Navigation","Navbar","expand","Brand","alt","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Image","roundedCircle","fluid","img","drop","SignUp","address","city","province","postal","phone","status","val","Row","as","Col","custom","defaultValue","updateAdmin","printState","About","Container","xs","md","Figure","Caption","logoutHelper","apiUpdateProfilePicture","img_URI","profilePic","patch","response","apiUpdatePreferences","preferences","JSON","stringify","put","apiGetApplications","apiSubmitApplication","postingID","clinicID","apiDeleteApplication","applicationID","delete","apiGetPosts","apiGetPost","apiGetQuestionnaireData","apiSetQuestionnaireData","questionnaireData","questionnaire","apiGetUserData","userID","apiGetPostings","apiGetPosting","apiSubmitPosting","pet","clinicName","clinicAddress","description","apiApproveApplication","apiRejectApplication","UserApplication","rejectApplication","acceptApplication","cancelApplication","openQs","class","userName","phoneNumber","petImgSrc","appStatus","petName","clinic","petBreed","petAge","petSummary","Applications","getUserApps","userApps","getUser","getPosting","allInfo","ret","selected","i","posting","getAllInfo","map","images","additionalInfo","substring","Math","min","age","PetPosting","addClinicDesc","petImages","onImageChange","imageList","addUpdateIndex","currImages","currAge","parseInt","readOnly","rows","multiple","maxNumber","dataURLKey","onImageUpload","onImageRemoveAll","onImageUpdate","onImageRemove","isDragging","dragProps","undefined","image","index","InfoSection","onProfilePicChange","RcRange","RcSlider","createSliderWithTooltip","Range","ToolTipSlider","PreferencesSection","selectedPets","petOptionDict","label","to_return","forEach","selectStyles","option","provided","borderBottom","onPreferenceAgeChange","tipFormatter","tipProps","visible","max","handleStyle","trackStyle","onPreferenceDistanceChange","tip","radius","convertSelectedPets","petTypes","isMulti","options","styles","onPetSelectChange","onUpdatePreferences","ApplicationSection","loadQuestionnaire","Profile","update","$set","forceUpdate","roundedColor","imageWidth","imageHeight","roundedSize","margin","Tabs","defaultActiveKey","Tab","eventKey","tabClassName","PostCard","flipCard","showDetails","postData","lightBoxOptions","settings","autoPlaySpeed","caption","buttons","thumbnails","showThumbnails","thumbnailsSize","progressBar","isFlipped","flipDirection","bg","Footer","petImg","ImgOverlay","submitApplication","PostSwiper","posts","getPosts","AdminApplications","getAvailPets","availPets","selctedApps","searchApps","currApps","searchAge","searchBreed","searchType","searchName","filter","selectedApps","column","sm","x","indexOf","p","inline-block","userjson","pages","elements","isRequired","choices","text","otherText","visibleIf","hideNumber","requiredIf","inputType","hasOther","noneText","items","hasNone","hasSelectAll","showPreviewBeforeComplete","Questionnaire","isCompleted","json","onCompleteComponent","survey","valuesHash","Survey","ThemeColors","applyTheme","model","showCompletedPage","onComplete","location","pathname","split","apps","mode","Logout","logout","removeItem","goBack","stay","App","isMounted","getItem","isValid","exact","path","render","to","Alert","dismissible","transition","QuestionnaireAdmin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.391ffad3.chunk.js","sourcesContent":["global.isLoggedIn = false;\nglobal.isClinic = false;","// started code taken directly from lecture content @:\n// https://github.com/csc309-winter-2021/react-express-authentication/blob/master/client/src/config.js\n\nconst prod = {\n  env: \"production\",\n  api_host: \"\",\n};\nconst dev = {\n  env: \"development\",\n  api_host: \"http://localhost:5000\", // web server localhost port\n};\n\nexport default process.env.NODE_ENV === \"production\" ? prod : dev;\n","import axios from \"axios\";\n\nimport ENV from \"../config.js\";\nconst API_HOST = ENV.api_host;\n\nexport const apiCheckSession = async (app) => {\n  try {\n    const session = await axios.get(`${API_HOST}/api/auth/sessionchecker`);\n    return session.data;\n  } catch (error) {\n    // no need to log here, we are logging in App.js\n    // console.log(error);\n    throw error;\n  }\n};\n\nexport const apiLogin = async (email, password) => {\n  const reqBody = {\n    email,\n    password,\n  };\n\n  try {\n    const res = await axios.post(`${API_HOST}/api/auth/login`, reqBody);\n    // console.log(\"login: \" + JSON.stringify(res));\n    return res.data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const apiSignUp = async (userData) => {\n  try {\n    const res = await axios.post(`${API_HOST}/api/auth/add`, userData);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const apiLogout = async () => {\n  try {\n    await axios.get(`${API_HOST}/api/auth/logout`);\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n","import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { apiLogin } from \"../../api/auth\";\n\nimport \"./Login.css\";\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  validateForm() {\n    return this.state.email.length > 0 && this.state.password.length > 0;\n  }\n\n\n  //login event \n  async handleSubmit(event) {\n    event.preventDefault();\n\n    try{\n      const userData = await apiLogin(this.state.email, this.state.password); \n      localStorage.setItem('isLoggedIn', true);\n      console.log('updating current user');\n      this.props.app.setState({ currUser: userData.user});\n\n      if(userData.user.admin) {\n        this.props.history.push('/adminapps'); //show admin apps if admin user\n      } else {\n        this.props.history.push('/applications'); //show user apps if regular user\n      }\n      \n    } catch(error) {\n      console.log(error); \n      alert('The email or password that you have entered is incorrect!');\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"Login\">\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group\n            style={{ color: \"\" }}\n            size=\"lg\"\n            controlId=\"formGroupEmail\"\n          >\n            <Form.Label className=\"loginLabel\">Email</Form.Label>\n            <Form.Control\n              // style={{backgroundColor: '#5bc0de'}}\n              autoFocus\n              type=\"email\"\n              placeholder=\"Email\"\n              value={this.state.email}\n              onChange={(e) => this.setState({ email: e.target.value })}\n            />\n          </Form.Group>\n          <Form.Group\n            style={{ color: \"\" }}\n            size=\"lg\"\n            controlId=\"formGroupPassword\"\n          >\n            <Form.Label className=\"loginLabel\">Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={this.state.password}\n              placeholder=\"Password\"\n              onChange={(e) => this.setState({ password: e.target.value })}\n            />\n          </Form.Group>\n          <a href=\"/signup\">click here to sign up</a>\n          <Button\n            block\n            style={{ backgroundColor: \"#429EA6\", borderColor: \"transparent\" }}\n            size=\"lg\"\n            type=\"submit\"\n            disabled={!this.validateForm()}\n          >\n            Login\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\n\nimport \"./Pet.css\";\n\nimport {Card} from \"react-bootstrap\";\nclass Pet extends React.Component {\n  constructor(props) {\n      super();\n  }\n  render() {\n    return (\n        <Card className=\"pet\" style={{width: '17rem', height: this.props.cardHeight}}>\n            <Card.Img variant=\"top\" src={this.props.imgSrc} style={{height: this.props.imgHeight}}/>\n            <Card.Body >\n                <Card.Title>{this.props.name}</Card.Title>\n                <Card.Subtitle><strong>Type</strong>: {this.props.type}, <strong>Breed:</strong> {this.props.breed}</Card.Subtitle>\n                <Card.Text>{this.props.addInfo}</Card.Text>\n                {this.props.comments !== '' ? <Card.Text>Comments: {this.props.comments}</Card.Text> : \"\"}\n            </Card.Body>\n        </Card>\n    );\n  }\n}\n\nPet.defaultProps = {\n    'Bread' : 'Unknown',\n    'Age' : 'Uknown',\n    'addInfo' : 'No additional information available at the moment',\n    'comments' : '',\n    'cardHeight' : '24rem',\n    'imgHeight' : '65%'\n}\n\nexport default Pet;\n","import React from \"react\";\nimport { Button, Carousel, CardDeck } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Pet from \"../Pet/Pet\";\nimport \"./Intro.css\";\n\nclass Intro extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  loadLogin(){\n    this.props.history.push('/login');    \n  }\n  loadSignUp(){\n    this.props.history.push('/signup');\n  }\n  render() {\n    return (\n      <div className=\"intro\">\n        <div className=\"hero-image\">\n          <div className=\"hero-text\">\n            <h1>Welcome to Pinder!</h1>\n            <p>The Best Adoption Platform on the internet.</p>\n            <Button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={() => this.loadLogin()}\n            >\n              Login\n            </Button>\n            <Button\n              type=\"button\"\n              className=\"btn btn-success\"\n              onClick={() => this.loadSignUp()}\n            >\n              Signup\n            </Button>\n          </div>\n        </div>\n        <br></br>\n        <Carousel indicators={false} className=\"introCarousel small\">\n          <Carousel.Item interval={2000}>\n            <CardDeck>\n              <Pet\n                name=\"Biscuit\"\n                type=\"Dog\"\n                breed=\"Golden Retriever\"\n                imgSrc=\"/dogo.jpeg\"\n                addInfo=\"This is a lit puppy\"\n              />\n              <Pet\n                name=\"Pussy Cat\"\n                type=\"Cat\"\n                breed=\"Long Haired\"\n                imgSrc=\"/cat1.jpg\"\n                addInfo=\"PUSSY CAT\"\n              />\n              <Pet\n                name=\"Big Boi\"\n                type=\"Dog\"\n                breed=\"Samoyed\"\n                imgSrc=\"/bigb.jpg\"\n                addInfo=\"The BIGGEST BOI you can find\"\n              />\n              {/* <Pet name=\"RR\" type=\"Small Pet\" breed=\"Something\" imgSrc=\"/pari-hamster.jpg\" addInfo=\"Interesting\" /> */}\n            </CardDeck>\n          </Carousel.Item>\n          <Carousel.Item interval={2000}>\n            <CardDeck>\n              <Pet\n                name=\"Chami\"\n                type=\"Reptile\"\n                breed=\"XYZ\"\n                imgSrc=\"/chami-reptile.jpeg\"\n              />\n              <Pet\n                name=\"Nosey\"\n                type=\"Fish\"\n                breed=\"YYZ\"\n                imgSrc=\"/nosey-fish.jpg\"\n              />\n              <Pet\n                name=\"Pari\"\n                type=\"Small Pet\"\n                breed=\"Hamster\"\n                imgSrc=\"/pari-hamster.jpg\"\n              />\n            </CardDeck>\n          </Carousel.Item>\n        </Carousel>\n      </div>\n    );\n  }\n}\n\nexport default Intro;\n","import React from \"react\";\n\nimport { Nav, Navbar, NavDropdown, Image } from \"react-bootstrap\";\n\nclass Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const { app } = this.props;\n    return (\n      <div className=\"navbarsomething\">\n        {/* make the color transparent in the future */}\n        <Navbar expand=\"lg\" style={{ backgroundColor: \"#C3BEF7\" }}>\n          <Navbar.Brand href=\"/\">\n            <img\n              src=\"/dog-icon.png\"\n              width=\"30\"\n              height=\"30\"\n              className=\"d-inline-block align-top\"\n              alt=\"\"\n            />\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"/about\"> About </Nav.Link>\n              {app.state.currUser ? (\n                app.state.currUser.admin ? (\n                  <Nav.Link href=\"/adminapps\">Applications</Nav.Link>\n                ) : (\n                  <Nav.Link href=\"/swiper\">Pets</Nav.Link>\n                )\n              ) : (\n                \"\"\n              )}\n              {app.state.currUser ? (\n                app.state.currUser.admin ? (\n                  <Nav.Link href=\"/postapet\">Post a Pet</Nav.Link>\n                ) : (\n                  <Nav.Link href=\"/applications\">Applications</Nav.Link>\n                )\n              ) : (\n                \"\"\n              )}\n            </Nav>\n            <Nav>\n              {app.state.currUser ? (\n                <NavDropdown\n                  title={\n                    <Image\n                      width=\"30\"\n                      height=\"30\"\n                      src=\"/profile-icon.png\"\n                      roundedCircle\n                      fluid\n                    />\n                  }\n                  id=\"profile-dropdown\"\n                  img=\"/profile-icon.png\"\n                  drop=\"left\"\n                >\n                  <NavDropdown.Item href=\"/profile\">Profile</NavDropdown.Item>\n                  <NavDropdown.Item href=\"/logout\">Logout</NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                \"\"\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { apiSignUp } from \"../../api/auth\";\n\nimport \"./Signup.css\";\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      address: \"\",\n      city: \"\",\n      province: \"\",\n      postal: \"\",\n      admin: \"\",\n      phone: \"\",\n      status: \"\",\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  validateForm() {\n    return (\n      this.state.name.length > 0 &&\n      this.state.email.length > 0 &&\n      this.state.password.length > 0 &&\n      this.state.address.length > 0 &&\n      this.state.city.length > 0 &&\n      this.state.province !== \"\" &&\n      this.state.postal.length > 0 &&\n      this.state.phone.length > 0 && \n      this.state.admin !== \"\"\n    );\n  }\n\n  updateAdmin(event) {\n    let val = event.target.value;\n    if (val === \"No\") this.setState({ admin: false });\n    else if (val === \"Yes\") this.setState({ admin: true });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n\n    try{\n      const userData = await apiSignUp(this.state); \n     \n      console.log('updating current user after signup');\n      this.props.app.setState({ currUser: userData.user});\n\n      if(userData.user.admin) {\n        this.props.history.push('/adminapps'); //show admin apps if admin user\n      } else {\n        this.props.history.push(\"/questionnaire\"); //show user questionnaire if regular user\n      }\n      \n    } catch(error) {\n      console.log(error); \n      alert('This user already exists!');\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Signup\">\n        <Form onSubmit={this.handleSubmit} className=\"\">\n          <Form.Group size=\"lg\" controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              autoFocus\n              type=\"text\"\n              value={this.state.name}\n              onChange={(e) => this.setState({ name: e.target.value })}\n            />\n          </Form.Group>\n          <Form.Group size=\"lg\" controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              autoFocus\n              type=\"email\"\n              value={this.state.email}\n              onChange={(e) => this.setState({ email: e.target.value })}\n            />\n          </Form.Group>\n          <Form.Group size=\"lg\" controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={this.state.password}\n              onChange={(e) => this.setState({ password: e.target.value })}\n            />\n          </Form.Group>\n          <Form.Group size=\"lg\" controlId=\"phoneNumber\">\n            <Form.Label>Phone Number</Form.Label>\n            <Form.Control\n              type=\"tel\"\n              value={this.state.phone}\n              onChange={(e) => this.setState({ phone: e.target.value })}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formAddress\">\n            <Form.Label>Address</Form.Label>\n            <Form.Control\n              placeholder=\"1234 Main St\"\n              autoFocus\n              type=\"text\"\n              value={this.state.address}\n              onChange={(e) => this.setState({ address: e.target.value })}\n            />\n          </Form.Group>\n\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"formCity\">\n              <Form.Label>City</Form.Label>\n              <Form.Control\n                autoFocus\n                type=\"text\"\n                value={this.state.city}\n                onChange={(e) => this.setState({ city: e.target.value })}\n              />\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridProvince\">\n              <Form.Label>Province</Form.Label>\n              <Form.Control\n                as=\"select\"\n                custom\n                defaultValue=\"\"\n                onChange={(e) => this.setState({ province: e.target.value })}\n              >\n                <option value=\"\">Choose..</option>\n                <option value=\"Alberta\">Alberta</option>\n                <option value=\"British Columbia\">British Columbia</option>\n                <option value=\"Manitoba\">Manitoba</option>\n                <option value=\"New Brunswick\">New Brunswick</option>\n                <option value=\"Newfoundland and Labrador\">\n                  Newfoundland and Labrador\n                </option>\n                <option value=\"Nova Scotia\">Nova Scotia</option>\n                <option value=\"Ontario\">Ontario</option>\n                <option value=\"Prince Edward Island\">\n                  Prince Edward Island\n                </option>\n                <option value=\"Quebec\">Quebec</option>\n                <option value=\"Saskatchewan\">Saskatchewan</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridPostal\">\n              <Form.Label>Postal Code</Form.Label>\n              <Form.Control\n                autoFocus\n                type=\"text\"\n                value={this.state.postal}\n                onChange={(e) => this.setState({ postal: e.target.value })}\n              />\n            </Form.Group>\n          </Form.Row>\n\n          {/* <Form.Group controlId=\"formGridCheckbox\">\n            <Form.Check type=\"checkbox\" label=\"Please check this box if you are registering for a clinic\" />\n          </Form.Group> */}\n\n          <Form.Group controlId=\"clinicSelection\">\n            <Form.Label>Registering a clinic?</Form.Label>\n            <Form.Control\n              as=\"select\"\n              custom\n              defaultValue=\"\"\n              onChange={(e) => this.updateAdmin(e)}\n            >\n              <option value=\"\">Choose..</option>\n              <option value=\"Yes\">Yes</option>\n              <option value=\"No\">No</option>\n            </Form.Control>\n          </Form.Group>\n\n          <Button\n            block\n            size=\"lg\"\n            type=\"submit\"\n            style={{ backgroundColor: \"#429EA6\", borderColor: \"transparent\" }}\n            disabled={!this.validateForm()}\n            onClick={this.printState}\n          >\n            SignUp\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default SignUp;\n","import React from \"react\";\nimport { Row, Col, Image, Container, Figure } from \"react-bootstrap\";\nclass About extends React.Component {\n  constructor() {\n    super();\n  }\n  render() {\n    return (\n      <Container className=\"about small\">\n        <Row className=\"justify-content-md-center\">\n          <h1>\n            {\" \"}\n            Created for the <br /> Introduction to Web Development Course\n            (CSC309) <br /> at University of Toronto.\n          </h1>{\" \"}\n        </Row>\n        <Container className=\"aboutImages\">\n          <Row className=\"justify-content-md-center\">\n            <Col xs={6} md={4}>\n              <Figure>\n                <Figure.Image\n                  className=\"small\"\n                  src=\"ParsaTajik.jpeg\"\n                  fluid\n                  roundedCircle\n                  alt=\"Parsa Tajik\"\n                />\n                <Figure.Caption className=\"aboutCaption\">\n                  Parsa Tajik\n                </Figure.Caption>\n              </Figure>\n            </Col>\n            <Col xs={6} md={4}>\n              <Figure>\n                <Figure.Image\n                  className=\"small\"\n                  src=\"JoshuaChua.jpeg\"\n                  fluid\n                  roundedCircle\n                  alt=\"Joshua Chua\"\n                />\n                <Figure.Caption className=\"aboutCaption\">\n                  Joshua Chua\n                </Figure.Caption>\n              </Figure>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-md-center\">\n            <Col xs={6} md={4}>\n              <Figure>\n                <Figure.Image\n                  className=\"small\"\n                  src=\"JimboXie.jpeg\"\n                  fluid\n                  roundedCircle\n                  alt=\"Jimbo Xie\"\n                />\n                <Figure.Caption>\n                  Jimbo Xie\n                </Figure.Caption>\n              </Figure>\n            </Col>\n            <Col xs={6} md={4}>\n              <Figure>\n                <Figure.Image\n                  className=\"small\"\n                  src=\"BamdadSahraei.jpeg\"\n                  fluid\n                  roundedCircle\n                  alt=\"Bamdad Sahraei\"\n                />\n                <Figure.Caption>\n                  Bamdad Sahraei\n                </Figure.Caption>\n              </Figure>\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default About;\n","\n\n\n//facilitate logout \nexport const logoutHelper = async () => {\n    //to do \n};\n","/* \nWrapper functions to call user endpoints \n*/\n\nimport axios from \"axios\";\nimport { logoutHelper } from \"../helper\";\n\nimport ENV from \"../config.js\";\nconst API_HOST = ENV.api_host;\n\n//update user profile picture\nexport const apiUpdateProfilePicture = async (img_URI) => {\n  const reqBody = {\n    profilePic: img_URI,\n  };\n\n  try {\n    await axios.patch(`${API_HOST}/api/user/pic`, reqBody);\n  } catch (error) {\n    if (error.response.status === 401) {\n      logoutHelper();\n    } else {\n      throw error;\n    }\n  }\n};\n\n//update user preferences\nexport const apiUpdatePreferences = async (preferences) => {\n\n  const reqBody = {\n    preferences\n  }\n\n  console.log(\"preferences to send: \" + JSON.stringify(reqBody));\n\n  try {\n    await axios.put(`${API_HOST}/api/user/preferences`, reqBody);\n  } catch (error) {\n    if (error.response.status === 401) {\n      logoutHelper();\n    } else {\n      throw error;\n    }\n  }\n};\n\n// ------------------------------------- application endpoints --------------------------------------------\n\n//get applications this user has applied to (with optional status specified)\nexport const apiGetApplications = async (status) => {\n  const reqBody = {};\n\n  if (status != \"\") {\n    reqBody[\"status\"] = status;\n  }\n\n  try {\n    const res = await axios.get(`${API_HOST}/api/user/applications`, reqBody);\n    return res.data;\n  } catch (error) {\n    if (error.response.status === 401) {\n      logoutHelper();\n    } else {\n      throw error;\n    }\n  }\n};\n\n//get specific application (based on id )\nexport const apiGetSpecificApplication = async (id) => {\n  try {\n    const res = await axios.get(`${API_HOST}/api/user/applications/${id}`);\n    return res.data;\n  } catch (error) {\n    if (error.response.status === 401) {\n      logoutHelper();\n    } else {\n      throw error;\n    }\n  }\n};\n\n//submit application (using postingID and clinicID)\nexport const apiSubmitApplication = async (postingID, clinicID) => {\n  const reqBody = {\n    postingID,\n    clinicID\n  };\n\n  try {\n    const res = await axios.post(`${API_HOST}/api/user/applications`, reqBody);\n    return res.data;\n  } catch (error) {\n    if (error.response.status === 401) {\n      logoutHelper();\n    } else {\n      throw error;\n    }\n  }\n};\n\n//delete application (using postingID and clinicID)\nexport const apiDeleteApplication = async (applicationID) => {\n  try {\n    await axios.delete(`${API_HOST}/api/user/applications/${applicationID}`);\n  } catch (error) {\n    if (error.response.status === 401) {\n      logoutHelper();\n    } else {\n      throw error;\n    }\n  }\n};\n\n//get all postings to display in pet swiper\nexport const apiGetPosts = async () => {\n  try {\n    const res = await axios.get(`${API_HOST}/api/user/posts`);\n    return res.data;\n  } catch (error) {\n    if (error.response.status === 401) {\n      logoutHelper();\n    } else {\n      throw error;\n    }\n  }\n};\n\n//get a posting to display in pet swiper\nexport const apiGetPost = async (postingID, clinicID) => {\n    try {\n      const reqBody = {\n          postingID: postingID,\n          clinicID: clinicID\n      }\n      const res = await axios.post(`${API_HOST}/api/user/post`, reqBody);\n      return res.data;\n    } catch (error) {\n      if (error.response.status === 401) {\n        logoutHelper();\n      } else {\n        throw error;\n      }\n    }\n  };\n\n//get user questionnaire data\nexport const apiGetQuestionnaireData = async () => {\n  try {\n    const res = await axios.get(`${API_HOST}/api/user/questionnaire`);\n    return res.data;\n  } catch (error) {\n    if (error.response.status === 401) {\n      logoutHelper();\n    } else {\n      throw error;\n    }\n  }\n};\n\n//set user questionnaire data\nexport const apiSetQuestionnaireData = async (questionnaireData) => {\n  const reqBody = {\n    questionnaire: questionnaireData,\n  };\n\n  try {\n    await axios.put(`${API_HOST}/api/user/questionnaire`, reqBody);\n  } catch (error) {\n    if (error.response.status === 401) {\n      logoutHelper();\n    } else {\n      throw error;\n    }\n  }\n};\n\n//get individual user data\nexport const apiGetUserData = async (userID) => {\n  try {\n    const res = await axios.get(`${API_HOST}/api/user/${userID}`);\n    return res.data; \n  } catch (error) {\n    if (error.response.status === 401) {\n      logoutHelper();\n    } else {\n      throw error;\n    }\n  }\n};\n","/* \nWrapper functions to call user endpoints \n*/\n\nimport axios from \"axios\";\nimport { logoutHelper } from \"../helper\";\n\nimport ENV from \"../config.js\";\nconst API_HOST = ENV.api_host;\n\n//get all pet postings from this admin user\nexport const apiGetPostings = async (status) => {\n  const reqBody = {};\n\n  if (status !== \"\") {\n    reqBody[\"status\"] = status;\n  }\n\n  try {\n    const res = await axios.get(`${API_HOST}/api/admin/postings`, reqBody);\n    return res.data;\n  } catch (error) {\n    if (error.response.status === 401) {\n      logoutHelper();\n    } else {\n      throw error;\n    }\n  }\n};\n\n//get specific posting from this admin user\nexport const apiGetPosting = async (postingID) => {\n  try {\n    const res = await axios.get(`${API_HOST}/api/admin/postings/${postingID}`);\n    return res.data;\n  } catch (error) {\n    if (error.response.status === 401) {\n      logoutHelper();\n    } else {\n      throw error;\n    }\n  }\n};\n\n//submit a new post\nexport const apiSubmitPosting = async (pet, clinicID, clinicName, clinicAddress, description) => {\n  const reqBody = {\n    pet,\n    clinicID,\n    clinicName, \n    clinicAddress,\n    description,\n  };\n\n  try {\n    const res = await axios.post(`${API_HOST}/api/admin/postings`, reqBody);\n    return res.data;\n  } catch (error) {\n    if (error.response.status === 401) {\n      logoutHelper();\n    } else {\n      throw error;\n    }\n  }\n};\n\n//modify a new post\nexport const apiModifyPosting = async (postingID, updateObject) => {\n  try {\n    const res = await axios.patch(\n      `${API_HOST}/api/admin/postings/${postingID}`,\n      updateObject\n    );\n    return res.data;\n  } catch (error) {\n    if (error.response.status === 401) {\n      logoutHelper();\n    } else {\n      throw error;\n    }\n  }\n};\n\n//delete a post\nexport const apiDeletePosting = async (postingID) => {\n  try {\n    await axios.delete(`${API_HOST}/api/admin/postings/${postingID}`);\n  } catch (error) {\n    if (error.response.status === 401) {\n      logoutHelper();\n    } else {\n      throw error;\n    }\n  }\n};\n\n//get all applications this admin user has received\nexport const apiGetApplications = async () => {\n  try {\n    const res = await axios.get(`${API_HOST}/api/admin/applications`);\n    return res.data;\n  } catch (error) {\n    if (error.response.status === 401) {\n      logoutHelper();\n    } else {\n      throw error;\n    }\n  }\n};\n\n//get all applications for a specific posting\nexport const apiGetApplicationsForPosting = async (postingID) => {\n  try {\n    const res = await axios.get(\n      `${API_HOST}/api/admin/applications/${postingID}`\n    );\n    return res.data;\n  } catch (error) {\n    if (error.response.status === 401) {\n      logoutHelper();\n    } else {\n      throw error;\n    }\n  }\n};\n\n//approve application\nexport const apiApproveApplication = async (applicationID) => {\n  try {\n    const res = await axios.get(\n      `${API_HOST}/api/admin/applications/approve/${applicationID}`\n    );\n    return res.data;\n  } catch (error) {\n    if (error.response.status === 401) {\n      logoutHelper();\n    } else {\n      throw error;\n    }\n  }\n};\n\n//reject application\nexport const apiRejectApplication = async (applicationID) => {\n  try {\n    const res = await axios.get(\n      `${API_HOST}/api/admin/applications/reject/${applicationID}`\n    );\n    return res.data;\n  } catch (error) {\n    if (error.response.status === 401) {\n      logoutHelper();\n    } else {\n      throw error;\n    }\n  }\n};\n","import React from \"react\";\nimport { Row, Col, Image, Button } from \"react-bootstrap\";\nimport { apiApproveApplication, apiRejectApplication } from \"../../api/admin\";\nimport { apiDeleteApplication } from \"../../api/user\";\n\nclass UserApplication extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  static defaultProps = {\n    admin: true,\n    width: 50,\n    height: 50,\n  };\n\n  // only for admins\n  rejectApplication = async () => {\n    try {\n      await apiRejectApplication(this.props.id);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // only for admins\n  acceptApplication = async () => {\n    try {\n      let data = await apiApproveApplication(this.props.id);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // only for regular users\n  cancelApplication = async () => {\n    try {\n      await apiDeleteApplication(this.props.id);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  openQs = () => {  \n    this.props.history.push('/userqs/' + this.props.id);\n  }  \n\n  render() {\n    return (\n      <div>\n        {this.props.admin ? (\n          <div className=\"card\">\n            <div className=\"additional\">\n              <div className=\"user-card\">\n                <img src={this.props.imgSrc} className=\"img-center\"></img>\n                <div class=\"multi-button\">\n                  <button\n                    onClick={() => this.acceptApplication()}\n                    className=\"a-r-btn accept-button\"\n                  >\n                    Accept\n                  </button>\n                  <button\n                    onClick={() => this.rejectApplication()}\n                    className=\"a-r-btn reject-button\"\n                  >\n                    Reject\n                  </button>\n                </div>\n              </div>\n              <div className=\"more-info\">\n                <h1>{this.props.userName}</h1>\n                <div className=\"coords\">\n                  <span>Email: {this.props.email}</span>\n                  <br></br>\n                  <span>City: {this.props.city}</span>\n                  <br></br>\n                  <span>Province: {this.props.province}</span>\n                  <br></br>\n                  <span>Phone: {this.props.phoneNumber}</span>\n                </div>\n                <div className=\"stats\">\n                  <button\n                    onClick={() => this.openQs()}\n                    className=\"a-r-btn ques-btn\"\n                  >\n                    Show Questionnaire Results\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className=\"general\">\n              <h1>{this.props.userName}</h1>\n              <p>\n                I am eager to find out more about this little guy! I really\n                connected with him!\n              </p>\n              <span className=\"more\">Mouse over the card for more info</span>\n            </div>\n          </div>\n        ) : (\n          <div className=\"card\">\n            <div className=\"additional\">\n              <div className=\"user-card\">\n                <img src={this.props.petImgSrc} className=\"img-center\"></img>\n                <div class=\"multi-button\">\n                  <button className=\"a-r-btn reject-button\">\n                    Cancel Application\n                  </button>\n                </div>\n                <div className=\"stats\">\n                  <div>\n                    <div className=\"title\">Status:</div>\n                    <div className=\"value\">{this.props.appStatus}</div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"more-info\">\n                <h1>{this.props.petName}</h1>\n                <div className=\"coords\">\n                  <span>Clinic: {this.props.clinic}</span>\n                  <br></br>\n                  <span>Breed: {this.props.petBreed}</span>\n                  <br></br>\n                  <span>Age: {this.props.petAge}</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"general\">\n              <h1>{this.props.petName}</h1>\n              <p>{this.props.petSummary}</p>\n              <span className=\"more\">Mouse over the card for more info</span>\n            </div>\n          </div>\n        )}\n      </div>\n      //         <div className=\"general\">\n      //           <h1>{this.props.userName}</h1>\n      //           <p>{this.props.summary}</p>\n      //           <span className=\"more\">Mouse over the card for more info</span>\n      //         </div>\n      //       </div>\n      //         ) : (\n      //       <div className={`card ${this.props.color}`}>\n      //         <div className=\"additional\">\n      //           <div className=\"user-card\">\n      //             <img src={this.props.petImgSrc} className=\"img-center\"></img>\n      //             <div class=\"multi-button\">\n      //               <button className=\"a-r-btn reject-button\">\n      //                 Cancel Application\n      //               </button>\n      //             </div>\n      //             <div className=\"stats\">\n      //               <div>\n      //                 <div className=\"title\">Status:</div>\n      //                 <div className=\"value\">{this.props.appStatus}</div>\n      //               </div>\n      //             </div>\n      //           </div>\n      //           <div className=\"more-info\">\n      //             <h1>{this.props.petName}</h1>\n      //             <div className=\"coords\">\n      //               <span>CLinic: {this.props.clinic}</span>\n      //               <br></br>\n      //               <span>Breed: {this.props.petBreed}</span>\n      //               <br></br>\n      //               <span>Age: {this.props.petAge}</span>\n      //             </div>\n      //           </div>\n      //         </div>\n      //         <div className=\"general\">\n      //           <h1>{this.props.petName}</h1>\n      //           <p>{this.props.petSummary}</p>\n      //           <span className=\"more\">Mouse over the card for more info</span>\n      //         </div>\n      //       </div>\n      //     )}\n      //   </div>\n    );\n  }\n}\n\nexport default UserApplication;\n","import React from \"react\";\nimport \"./Applications.css\";\nimport { Form, Button, Card, Row, Col } from \"react-bootstrap\";\nimport { apiGetUserData, apiGetApplications, apiGetPost } from \"../../api/user\";\nimport UserApplication from \"../userApplication/userApplication\";\n\nclass Applications extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userApps: [],\n      allInfo: []\n    };\n  }\n\n  getUserApps = async (status = \"\") => {\n    try {\n      let data = await apiGetApplications(status);\n      console.log(data); \n      this.setState({ userApps: data });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  getUser = async (userID) => {\n    try {\n      const res = await apiGetUserData(userID);\n      return res;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  getPosting = async (postingID, clinicID) => {\n    try {\n      \n      const res = await apiGetPost(postingID, clinicID);\n      return res; \n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  async getAllInfo() {\n    \n    try {\n\n      let ret = [],\n      selected = this.state.userApps;\n\n      for (let i = 0; i < selected.length; i++) {\n\n        const user = await this.getUser(selected[i].userID); \n        const posting = await this.getPosting(selected[i].postingID, selected[i].clinicID)\n  \n        ret.push([\n          user,\n          posting,\n          selected[i].status,\n          selected[i].id\n        ]);\n      }\n\n      this.setState({allInfo: ret});\n\n      console.log(\"all info: \" + JSON.stringify(ret)); \n\n    } catch(error) {\n      console.log(error);\n      alert(\"Could not retrieve user applications. Please try again.\");\n    }    \n  }\n\n  async componentDidMount() {\n    if (this.state.userApps.length === 0) {\n      await this.getUserApps();\n      await this.getAllInfo(); \n    } \n  }\n  render() {\n   \n\n    return (\n      <div className=\"AdminAppContainer\">\n        {this.state.allInfo.length !== 0  ? (\n          <div class=\"center\">\n            {this.state.allInfo.map(app => (\n              <UserApplication\n              imgSrc=\"/user-profile-placeholder.png\"\n              userName={app[0].name}\n              email={app[0].email}\n              city={app[0].city}\n              phoneNumber={app[0].phone}\n              admin={false}\n              clinic={app[1].clinicID}\n              province={app[0].province}\n              petName={app[1].pet.name}\n              petImgSrc={app[1].pet.images[0]}\n              petSummary={app[1].pet.additionalInfo.substring(0, Math.min(8, app[1].pet.additionalInfo.length))}\n              appStatus={app[2]}\n              petBreed={app[1].pet.breed}\n              petAge={app[1].pet.age}\n              id={app[3]}\n            />\n            ))}\n          </div>\n        ) : (\n          <h3 style={{ color: \"white\" }}>\n            You have not submitted any recent applications.\n          </h3>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Applications;\n","import React from \"react\";\nimport { Form, Row, Col, Button, Card, Container } from \"react-bootstrap\";\nimport ImageUploading from \"react-images-uploading\";\nimport bsCustomFileInput from \"bs-custom-file-input\";\nimport { apiSubmitPosting } from \"../../api/admin\";\n\nimport \"./PetPosting.css\";\nclass PetPosting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      age: \"\",\n      breed: \"\",\n      type: \"\",\n      additionalInfo: \"\",\n      addClinicDesc: \"\",\n      petImages: [],\n      images: [],\n    };\n    this.onImageChange = this.onImageChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  validateForm() {\n    return (\n      this.state.age.length > 0 &&\n      this.state.type.length > 0 &&\n      this.state.breed.length > 0 &&\n      this.state.name.length > 0\n    );\n  }\n\n  onImageChange(imageList, addUpdateIndex) {\n    console.log(imageList, addUpdateIndex);\n    this.setState({ petImages: imageList });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    let currImages = this.state.petImages, currAge = this.state.age;\n    let user = this.props.app.state.currUser;\n    let pet = {...this.state};\n    pet['images'] = currImages.map(img => img[\"data_url\"]);\n    pet['age'] = parseInt(currAge); \n    let clinic = {\n      id: user.id,\n      name: user.name,\n      address: user.address + ', ' + user.city + ', ' + user.province + ', ' + user.postal\n    }; \n    let description = this.state.addClinicDesc;\n\n    try {\n      await apiSubmitPosting(pet, clinic.id, clinic.name, clinic.address, description);\n      alert(\"The posting was successfully added!\");\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    return (\n      <Container className=\"petPosting\">\n        <Row className=\"justify-content-md-center\">\n          <Col xs={6}>\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group controlId=\"affClinic\">\n                <Form.Label>Affiliated Clinic</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder={this.props.app.state.currUser.name}\n                  readOnly\n                />\n              </Form.Group>\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Please enter the pets name..\"\n                  value={this.state.name}\n                  onChange={(e) => this.setState({ name: e.target.value })}\n                />\n              </Form.Group>\n              <Form.Group controlId=\"petType\">\n                <Form.Label>Pet Type</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  custom\n                  onChange={(e) => this.setState({ type: e.target.value })}\n                >\n                  <option value=\"\">Choose..</option>\n                  <option value=\"dog\">Dog</option>\n                  <option value=\"cat\">Cat</option>\n                  <option value=\"fish\">Fish</option>\n                  <option value=\"bird\">Bird</option>\n                  <option value=\"reptile\">Reptile</option>\n                  <option value=\"smallpet\">\n                    Small Pet (Mouse, Hamster, Rabit, and etc.)\n                  </option>\n                </Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"breed\">\n                <Form.Label>Breed</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Golden Retriever, Husky, etc..\"\n                  value={this.state.breed}\n                  onChange={(e) => this.setState({ breed: e.target.value })}\n                />\n              </Form.Group>\n              <Form.Group controlId=\"age\">\n                <Form.Label>Age</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Please enter a valid number..\"\n                  value={this.state.age}\n                  onChange={(e) => this.setState({ age: e.target.value })}\n                />\n              </Form.Group>\n              <Form.Group controlId=\"additionalInfo\">\n                <Form.Label>Additional Pet Information</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows={5}\n                  placeholder=\"Please enter more information about the pet, let the Hoomans know who they are adopting!\"\n                  value={this.state.additionalInfo}\n                  onChange={(e) =>\n                    this.setState({ additionalInfo: e.target.value })\n                  }\n                />\n              </Form.Group>\n              <Form.Group controlId=\"addClinicDesc\">\n                <Form.Label>Additional Clinic Description</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows={5}\n                  placeholder=\"Please enter any additional clinic related information that you would like the applicants to know\"\n                  value={this.state.addClinicDesc}\n                  onChange={(e) =>\n                    this.setState({ addClinicDesc: e.target.value })\n                  }\n                />\n              </Form.Group>\n              <Button\n                block\n                size=\"lg\"\n                type=\"submit\"\n                style={{\n                  backgroundColor: \"#429EA6\",\n                  borderColor: \"transparent\",\n                }}\n                disabled={!this.validateForm()}\n              >\n                Submit\n              </Button>\n            </Form>\n          </Col>\n          <Col>\n            <p>Please attach the images of the pet here:</p> <br />\n            <ImageUploading\n              multiple\n              value={this.state.petImages}\n              onChange={this.onImageChange}\n              maxNumber={15}\n              dataURLKey=\"data_url\"\n            >\n              {({\n                imageList,\n                onImageUpload,\n                onImageRemoveAll,\n                onImageUpdate,\n                onImageRemove,\n                isDragging,\n                dragProps,\n              }) => (\n                // write your building UI\n                <div\n                  className=\"upload__image-wrapper\"\n                  style={{ backgroundColor: \"\" }}\n                >\n                  <Button\n                    className=\"btn-images1\"\n                    style={isDragging ? { color: \"red\" } : undefined}\n                    onClick={onImageUpload}\n                    {...dragProps}\n                  >\n                    Click or Drop here\n                  </Button>\n                  &nbsp;\n                  <Button onClick={onImageRemoveAll}>Remove all images</Button>\n                  {imageList.map((image, index) => (\n                    <div key={index} className=\"image-item\">\n                      <img src={image[\"data_url\"]} alt=\"\" width=\"100\" />\n                      <div className=\"image-item__btn-wrapper\">\n                        <Button size=\"sm\" onClick={() => onImageUpdate(index)}>\n                          &#8635;\n                        </Button>\n                        <Button size=\"sm\" onClick={() => onImageRemove(index)}>\n                          x\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </ImageUploading>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default PetPosting;\n","import React from \"react\";\nimport ImageUploading from \"react-images-uploading\";\n\nimport { Button } from \"react-bootstrap\";\n\nimport \"./InfoSection.css\";\nimport RcSlider from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\n\nclass InfoSection extends React.Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return (\n      <div className=\"infoSection\">\n        <h6 className=\"infoElement\">Email: {this.props.user.email} </h6>\n        <h6 className=\"infoElement\">Address: {this.props.user.address}</h6>\n        <h6 className=\"infoElement\">City: {this.props.user.city}</h6>\n        <h6 className=\"infoElement\">Province: {this.props.user.province}</h6>\n\n        <ImageUploading\n          value={this.props.profilePic}\n          onChange={this.props.onProfilePicChange}\n          maxNumber={1}\n          dataURLKey=\"data_url\"\n          className=\"infoElement\"\n        >\n          {({ onImageUpload, onImageRemoveAll, isDragging, dragProps }) => (\n            // write your building UI\n            <div className=\"upload__image-wrapper\">\n              <Button\n                style={isDragging ? { color: \"red\" } : undefined}\n                onClick={onImageUpload}\n                {...dragProps}\n              >\n                Add/Change Profile Pic\n              </Button>\n\n              <Button onClick={onImageRemoveAll}>Remove Profile Pic</Button>\n            </div>\n          )}\n        </ImageUploading>\n      </div>\n    );\n  }\n}\n\nexport default InfoSection;\n","import React from \"react\";\nimport \"./PreferencesSection.css\";\nimport Select from 'react-select';\nimport RcSlider, {createSliderWithTooltip} from 'rc-slider';\nimport { Button } from \"react-bootstrap\";\nimport 'rc-slider/assets/index.css';\n\nconst RcRange = RcSlider.createSliderWithTooltip(RcSlider.Range);\nconst ToolTipSlider = createSliderWithTooltip(RcSlider);\n\n\nclass PreferencesSection extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }  \n\n    convertSelectedPets(selectedPets) {\n\n        const petOptionDict = {\n            'dog': {\n                value: 'dog', \n                label: 'Dog'\n            }, \n            'cat': {\n                value: 'cat', \n                label: 'Cat'\n            }, \n            'fish':  {\n                value: 'fish', \n                label: 'Fish'\n            }, \n            'bird': {\n                value: 'bird', \n                label: 'Bird'\n            }, \n            'hamster' : {\n                value: 'hamster', \n                label: 'Hamster'\n            }, \n            'rabbit': {\n                value: 'rabbit', \n                label: 'Rabbit'\n            }\n        }\n\n        let to_return = []; \n\n        selectedPets.forEach((petName) => {\n            to_return.push(petOptionDict[petName]);\n        })\n\n        return to_return; \n    } \n\n    render() {\n\n        const petOptions = [\n            {\n                value: 'dog', \n                label: 'Dog'\n            }, \n            {\n                value: 'cat', \n                label: 'Cat'\n            }, \n            {\n                value: 'fish', \n                label: 'Fish'\n            }, \n            {\n                value: 'bird', \n                label: 'Bird'\n            }, \n            {\n                value: 'hamster', \n                label: 'Hamster'\n            }, \n            {\n                value: 'rabbit', \n                label: 'Rabbit'\n            }\n        ]\n\n\n        const selectStyles = {\n            option: (provided, state) => ({\n                ...provided,\n                borderBottom: '2px dotted grey', \n                color: 'black'\n            })\n        }\n        return (\n            <div className=\"preferencesSection\">\n\n                {this.props.user.preferences && \n                    <div> \n                        <h6> Age Preference (years) </h6> \n                        <RcRange\n                            onChange={(value) => this.props.onPreferenceAgeChange(value)} \n                            tipFormatter={(value) => `${value}`}\n                            tipProps={{ visible: true }}\n                            defaultValue={this.props.user.preferences.age}\n                            min={0}\n                            max={100}\n                            className=\"slider\"\n                            handleStyle={{borderColor: '#17a2b8', backgroundColor: 'white'}}\n                            trackStyle={[{backgroundColor: \"#17a2b8\"}]}\n                        />\n                    \n\n                        <h6> Radius (km) </h6>\n                        <ToolTipSlider\n                            onChange={(value) => this.props.onPreferenceDistanceChange(value)} \n                            tipFormatter={(value) => `${value}`}\n                            tip\n                            tipProps={{ visible: true }}\n                            defaultValue={this.props.user.preferences.radius}\n                            min={0}\n                            max={100}\n                            className=\"slider\"\n                            handleStyle={{borderColor: '#17a2b8', backgroundColor: 'white'}}\n                            trackStyle={[{backgroundColor: \"#17a2b8\"}]}\n                        />\n                        <h6> Pet Selections </h6> \n                        <Select \n                            defaultValue={this.convertSelectedPets(this.props.user.preferences.petTypes)}\n                            autoFocus\n                            isMulti\n                            options={petOptions} \n                            styles={selectStyles}\n                            onChange={this.props.onPetSelectChange}\n                            className=\"preferencesElement\"\n                        />\n\n                        <Button onClick={this.props.onUpdatePreferences}>Save</Button>\n                    </div> \n                }          \n            </div> \n\n        );\n    }\n}\n\nexport default PreferencesSection;\n","import React from \"react\";\nimport {Button} from \"react-bootstrap\";\nimport \"./ApplicationSection.css\";\n\nclass ApplicationSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    } \n  }  \n\n  loadQuestionnaire(){\n    this.props.history.push('/questionnaire');\n  }\n \n\n  render() {\n    return (\n      <Button type=\"button\" className=\"btn btn-primary\" onClick={() => this.loadQuestionnaire()}> Your Questionnaire </Button>\n    );\n  }\n}\n\nexport default ApplicationSection;\n","import React from \"react\";\nimport { Tabs, Tab } from \"react-bootstrap\";\nimport ReactRoundedImage from \"react-rounded-image\";\n\nimport InfoSection from \"./InfoSection/InfoSection\";\nimport PreferenceSection from \"./PreferencesSection/PreferencesSection\";\nimport ApplicationSection from \"./ApplicationSection/ApplicationSection\";\nimport update from 'immutability-helper';\n\nimport { apiUpdateProfilePicture, apiUpdatePreferences } from \"../../api/user\";\n\nimport \"./Profile.css\";\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n      profilePic: [],\n    };\n  }\n \n  //set user data\n  async componentDidMount() {\n \n    const { app } = this.props; \n    this.setState({user: app.state.currUser});\n    console.log(\"user:\" + JSON.stringify(app.state.currUser));\n    this.forceUpdate();  \n\n    //check if the user has a profile picture\n    if (this.state.user && this.state.user.profilePic == \"\") {\n      this.setState(update(this.state, {\"user\": {\"profilePic\": {$set: \"/user-profile-placeholder.png\"}}}));\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  onUpdatePreferences = async () => {\n    try {\n      await apiUpdatePreferences(this.state.user.preferences);\n      this.props.app.setState({ currUser: this.state.user}); //update app user \n      alert(\"Preferences saved successfully!\");\n    } catch (error) {\n      console.log(error);\n      alert(\"Preferences could not be saved. Please try again!\");\n    }\n  }\n\n  onProfilePicChange = async (imageList, addUpdateIndex) => {\n    if (imageList.length > 0) {\n      // adding image\n      this.setState(update(this.state, {\"user\": {\"profilePic\": {$set: imageList[0][\"data_url\"]}}}));\n\n      try {\n        await apiUpdateProfilePicture(this.state.user.profilePic);\n        this.props.app.setState({ currUser: this.state.user}); //update app user\n      } catch (error) {\n        console.log(error);\n        alert(\"Profile picture could not be saved. Please try again!\");\n      }\n    } else {\n      //removing image\n      this.setState(update(this.state, {\"user\": {\"profilePic\": {$set: \"/user-profile-placeholder.png\"}}}));\n    }\n    this.forceUpdate();\n  };\n\n  onPreferenceAgeChange = (value) => {\n\n    console.log(\"profile user: \" + JSON.stringify(this.state.user));\n\n    this.setState(update(this.state, {\"user\": {\"preferences\": {\"age\": {$set: value}}}}));\n    this.forceUpdate();\n  };\n\n  onPreferenceDistanceChange = (value) => {\n    this.setState(update(this.state, {\"user\": {\"preferences\": {\"radius\": {$set: value}}}}));\n    this.forceUpdate();\n  };\n\n  onPetSelectChange = (selectedPets) => {\n    let petTypes = [];\n\n    selectedPets.forEach((pet) => {\n      petTypes.push(pet.value);\n    });\n\n    console.log(\"selected pets: \" + petTypes); \n    console.log(\"original list: \" + selectedPets); \n\n    this.setState(update(this.state, {\"user\": {\"preferences\": {\"petTypes\": {$set: petTypes}}}}));\n    this.forceUpdate(); \n  };\n\n  render() {\n\n    return (\n      <div>\n        {this.state.user != {} && !this.state.user.admin && (\n          <div className=\"userProfile\">\n            <div className=\"profileIntro\">\n              <h1 className=\"name\">{this.state.user.name} </h1>\n\n              <div className=\"photo\">\n                <ReactRoundedImage\n                  image={this.state.user.profilePic}\n                  roundedColor=\"#17a2b8\"\n                  imageWidth=\"200\"\n                  imageHeight=\"200\"\n                  roundedSize=\"12\"\n                  margin=\"auto\"\n                />\n              </div>\n            </div>\n\n            <div className=\"profileSections\">\n              <Tabs defaultActiveKey=\"infoSection\">\n                <Tab\n                  eventKey=\"infoSection\"\n                  title=\"User Info\"\n                  tabClassName=\"sectionTab\"\n                >\n                  <InfoSection\n                    user={this.state.user}\n                    onProfilePicChange={this.onProfilePicChange}\n                  />\n                </Tab>\n\n                <Tab\n                  eventKey=\"preferencesSection\"\n                  title=\"Preferences\"\n                  tabClassName=\"sectionTab\"\n                >\n                  <PreferenceSection\n                    user={this.state.user}\n                    onPreferenceAgeChange={this.onPreferenceAgeChange}\n                    onPreferenceDistanceChange={this.onPreferenceDistanceChange}\n                    onPetSelectChange={this.onPetSelectChange}\n                    onUpdatePreferences={this.onUpdatePreferences}\n                  />\n                </Tab>\n\n                <Tab\n                  eventKey=\"applicationSection\"\n                  title=\"Application\"\n                  tabClassName=\"sectionTab\"\n                >\n                  <ApplicationSection {...this.props}/>\n                </Tab>\n              </Tabs>\n            </div>\n          </div>\n        )}\n\n\n\n        {this.state.user != {} && this.state.user.admin && (\n          <div className=\"userProfile\">\n            <div className=\"profileIntro\">\n              <h1 className=\"name\">{this.state.user.name} </h1>\n\n              <div className=\"photo\">\n                <ReactRoundedImage\n                  image={this.state.user.profilePic}\n                  roundedColor=\"#17a2b8\"\n                  imageWidth=\"200\"\n                  imageHeight=\"200\"\n                  roundedSize=\"12\"\n                  margin=\"auto\"\n                />\n              </div>\n            </div>\n\n            <div className=\"profileSections\">\n              <Tabs defaultActiveKey=\"infoSection\">\n                <Tab\n                  eventKey=\"infoSection\"\n                  title=\"User Info\"\n                  tabClassName=\"sectionTab\"\n                >\n                  <InfoSection\n                    user={this.state.user}\n                    onProfilePicChange={this.onProfilePicChange}\n                  />\n                </Tab>\n              </Tabs>\n            </div>\n          </div>\n        )}  \n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React from \"react\";\nimport {Card, Button} from \"react-bootstrap\";\nimport ReactCardFlip from 'react-card-flip'; \nimport SimpleReactLightBox from 'simple-react-lightbox'; \nimport {SRLWrapper} from \"simple-react-lightbox\"; \nimport {ArrowCounterclockwise } from 'react-bootstrap-icons';\n\nimport \"./PostCard.css\"\n\nclass PostCard extends React.Component {\n  constructor(props) {\n      super();\n      this.state = {\n          showDetails: false, //flag to determine which side of the card to show \n      }\n  }\n\n  flipCard = () => {\n    this.setState({showDetails: !this.state.showDetails})\n  }\n\n  render() {\n\n    const postData = this.props.postData;\n\n    const lightBoxOptions = {\n        settings: {\n            autoPlaySpeed: 3000\n        },\n        caption: {}, \n        buttons: {}, \n        thumbnails: {\n            showThumbnails: true, \n            thumbnailsSize: [\"100px\", \"100px\"]\n        },\n        progressBar: {}\n    }\n\n    return (\n\n        <ReactCardFlip isFlipped={this.state.showDetails} flipDirection=\"vertical\">\n\n            {/* Front Side */}\n            <Card bg=\"light\">\n                <Card.Img src={postData.pet.images[0]}/>\n                <Card.Body>\n                    <Card.Title>{postData.pet.name} <ArrowCounterclockwise color=\"grey\" size={25} onClick={this.flipCard}/> </Card.Title>\n                    <Card.Subtitle>Type: {postData.pet.type} | Breed: {postData.pet.breed}</Card.Subtitle>\n                    <Card.Text>{postData.pet.description}</Card.Text>\n                </Card.Body>\n\n                <Card.Footer> \n                    <SimpleReactLightBox> \n                        <SRLWrapper options={lightBoxOptions}> \n                            {postData.pet.images.map((petImg) => (\n                                <a href={petImg}>\n                                    <img src={petImg} style={{height: '100px'}}/>\n                                </a>\n                            ))}\n                        </SRLWrapper>\n                    </SimpleReactLightBox>\n                </Card.Footer>\n            </Card>\n\n            {/* Back Side */}\n            <Card bg=\"light\">\n                <Card.Img src={postData.pet.images[0]} className=\"opaque\"/>\n\n                <Card.ImgOverlay>\n                    <Card.Title>{postData.pet.name}</Card.Title>\n                    <Card.Text>Type: {postData.pet.type} | Breed: {postData.pet.breed}</Card.Text>\n                    <Card.Text>Age: {postData.pet.age}</Card.Text>\n                    <Card.Text>Clinic Name: {postData.clinicName}</Card.Text>\n                    <Card.Text>Clinic Address: {postData.clinicAddress}</Card.Text>\n                    <Card.Text>Additional Info: {postData.pet.additionalInfo}</Card.Text>\n                </Card.ImgOverlay> \n\n                <Card.Body className=\"elevate\">\n                    <Card.Title>{postData.pet.name} <ArrowCounterclockwise color=\"grey\" size={25} onClick={this.flipCard} /></Card.Title>\n                    <Button variant=\"primary\" onClick={() => this.props.submitApplication(postData)}>Apply</Button>\n                </Card.Body>\n\n                <Card.Footer className=\"elevate\"> \n                    <SimpleReactLightBox> \n                        <SRLWrapper options={lightBoxOptions}> \n                            {postData.pet.images.map((petImg) => (\n                                <a href={petImg}>\n                                    <img src={petImg} style={{height: '100px'}}/>\n                                </a>\n                            ))}\n                        </SRLWrapper>\n                    </SimpleReactLightBox>\n                </Card.Footer>\n\n            </Card>\n        </ReactCardFlip>\n\n    );\n  }\n}\n\nPostCard.defaultProps = {\n    'Bread' : 'Unknown',\n    'Age' : 'Uknown',\n    'addInfo' : 'No additional information available at the moment'\n}\n\nexport default PostCard;\n","import React from \"react\";\nimport { Carousel} from \"react-bootstrap\";\n\nimport PostCard from \"./PostCard\";\nimport \"./PostSwiper.css\";\n\nimport { apiGetPosts, apiSubmitApplication } from \"../../api/user\";\n\nclass PostSwiper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: []\n    };\n    this.submitApplication = this.submitApplication.bind(this);\n  }\n\n  //get posts to display in swiper \n  async componentDidMount() {\n    await this.getPosts(); \n  }\n\n  async getPosts() {\n\n    try {\n      const posts = await apiGetPosts();\n      if(posts && posts.length > 0) {\n        this.setState({posts: posts}); \n        this.forceUpdate();\n      } else {\n        alert(\"No posts found! Try adjusting your search preferences.\");\n      }\n\n    } catch (error) {\n      console.log(error);\n    }\n\n  }\n\n  async submitApplication(postData) {\n    \n    console.log(\"going to attempt to submit application\");\n    \n    console.log(\"post id: \" + postData.id); \n    console.log(\"clinic id: \" + postData.clinicID); \n\n    try {\n      await apiSubmitApplication(postData.id, postData.clinicID);\n      alert(\"Application submitted successfully!\"); \n    } catch (error) {\n      console.log(error);\n      alert(\"Could not submit application.\"); \n    }\n\n    //reload posts\n    await this.getPosts(); \n  }\n\n  render() {\n    return (\n      <div className=\"swiperContainer\">\n\n        {this.state.posts && \n         <Carousel className=\"swiper\" indicators={false}>\n\n          {this.state.posts.map((post) => (\n            <Carousel.Item interval={50000}>\n              <PostCard postData={post} submitApplication={this.submitApplication}/> \n            </Carousel.Item>\n          ))}\n\n        </Carousel>\n        }\n       \n      </div>\n    );\n  }\n}\n\nexport default PostSwiper;\n","import React from \"react\";\n\nimport { Form, Button, Card, Row, Col } from \"react-bootstrap\";\nimport UserApplication from \"../userApplication/userApplication\";\nimport RcSlider, { createSliderWithTooltip } from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\n\nimport \"./AdminApplications.css\";\nimport {\n  apiGetApplications,\n  apiGetPosting,\n  apiGetPostings,\n} from \"../../api/admin\";\nimport { apiGetUserData } from \"../../api/user\";\n\nconst RcRange = RcSlider.createSliderWithTooltip(RcSlider.Range);\nconst ToolTipSlider = createSliderWithTooltip(RcSlider);\n\nclass AdminApplications extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      availPets: [],\n      userApps: [],\n      selctedApps: [],\n      searchAge: \"\",\n      searchType: \"\",\n      searchBreed: \"\",\n      searchName: \"\",\n    };\n    this.getAllInfo = this.getAllInfo.bind(this);\n  }\n\n  getAvailPets = async (status = \"\") => {\n    // get the current pets of the current clinic from the database\n    try {\n      let availPets = await apiGetPostings();\n      this.setState({ availPets: availPets }, () =>\n        console.log(\"available pets were acquired\")\n      );\n      this.getUserApps();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  getUserApps = async () => {\n    // get user applications that were sent to this clinic from the database\n    try {\n      let userApps = await apiGetApplications();\n      this.setState({ userApps: userApps }, () =>\n        console.log(\"user applications were acquired\")\n      );\n      this.setState({ selctedApps: userApps });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  getUser = async (userID) => {\n    try {\n      return await apiGetUserData(userID);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  getPosting = async (postingID) => {\n    try {\n      return await apiGetPosting(postingID);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  searchApps = (e) => {\n    e.preventDefault();\n    let currApps = this.state.userApps,\n      age = this.state.searchAge,\n      breed = this.state.searchBreed,\n      type = this.state.searchType,\n      name = this.state.searchName;\n    if (age)\n      currApps = currApps.filter(\n        (app) => this.getPosting(app.userID).pet.age === parseInt(age)\n      );\n    if (breed)\n      currApps = currApps.filter(\n        (app) => this.getPosting(app.userID).pet.breed === breed\n      );\n    if (type)\n      currApps = currApps.filter(\n        (app) => this.getPosting(app.userID).pet.type === type\n      );\n    if (name)\n      currApps = currApps.filter(\n        (app) => this.getPosting(app.userID).pet.breed === name\n      );\n    this.setState({ selectedApps: currApps });\n  };\n\n  getAllInfo() {\n    let ret = [],\n      selected = this.state.selectedApps;\n    for (let i = 0; i < selected.length; i++)\n      ret.push([\n        this.getUser(selected[i].userID),\n        this.getPosting(selected[i].postingID),\n        selected[i].status,\n        selected[i].id\n      ]);\n    return ret;\n  }\n\n  componentDidMount() {\n    if (this.state.availPets.length === 0) this.getAvailPets();\n  }\n\n  render() {\n    let { availPets, userApps } = this.state;\n\n    return (\n      <div className=\"AdminAppContainer\">\n        <div className=\"appsSearch\">\n          <Form onSubmit={this.searchApps}>\n            <Form.Group as={Row} controlId=\"searchType\">\n              <Form.Label column sm={2}>\n                <strong>Type:</strong>{\" \"}\n              </Form.Label>\n              <Col>\n                <Form.Control\n                  as=\"select\"\n                  custom\n                  defaultValue=\"\"\n                  onChange={(e) => {\n                    this.setState({ searchType: e.target.value });\n                  }}\n                >\n                  <option value=\"\">Choose..</option>\n                  {availPets\n                    .map((pet) => pet.pet.type)\n                    .filter((x, i, a) => a.indexOf(x) === i)\n                    .map((p) => (\n                      <option value={p}>{p}</option>\n                    ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"searchBreed\">\n              <Form.Label column sm={2}>\n                <strong>Breed:</strong>{\" \"}\n              </Form.Label>\n              <Col>\n                <Form.Control\n                  as=\"select\"\n                  custom\n                  defaultValue=\"\"\n                  onChange={(e) => {\n                    this.setState({ searchBreed: e.target.value });\n                  }}\n                >\n                  <option value=\"\">Choose..</option>\n                  {availPets\n                    .map((pet) => pet.pet.breed)\n                    .filter((x, i, a) => a.indexOf(x) === i)\n                    .map((p) => (\n                      <option value={p}>{p}</option>\n                    ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"searchAge\">\n              <Form.Label column sm={2}>\n                <strong>Age Range:</strong>{\" \"}\n              </Form.Label>\n              <Col>\n                <RcRange\n                  tipFormatter={(value) => `${value}`}\n                  tipProps={{ visible: true }}\n                  defaultValue={[0, 10]}\n                  min={0}\n                  max={50}\n                  className=\"slider\"\n                  handleStyle={{\n                    borderColor: \"#17a2b8\",\n                    backgroundColor: \"white\",\n                  }}\n                  trackStyle={[{ backgroundColor: \"#17a2b8\" }]}\n                />\n                <Form.Control\n                  as=\"select\"\n                  custom\n                  defaultValue=\"\"\n                  onChange={(e) => {\n                    this.setState({ searchName: e.target.value });\n                  }}\n                >\n                  <option value=\"\">Choose..</option>\n                  {availPets.map((pet) => (\n                    <option value={pet.pet.name}>{pet.pet.name}</option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n            <Button\n              inline-block\n              size=\"lg\"\n              type=\"submit\"\n              style={{ backgroundColor: \"#429EA6\", borderColor: \"transparent\" }}\n              className=\"searchButton\" /*\"justify-content-md-center\"*/\n            >\n              Search\n            </Button>\n          </Form>\n        </div>\n        {userApps.length !== 0 ? (\n          <div class=\"center\">\n            {this.getAllInfo().map((app) => (\n              <UserApplication\n                imgSrc=\"/user-profile-placeholder.png\"\n                userName={app[0].name}\n                email={app[0].email}\n                city={app[0].city}\n                phoneNumber={app[0].phone}\n                admin={true}\n                province={app[0].province}\n                petName={app[1].pet.name}\n                petImgSrc={app[1].pet.images[0]}\n                petSummary={app[1].pet.additionalInfo.substring(0, Math.min(8, app[1].pet.additionalInfo.length))}\n                appStatus={app[2]}\n                petBreed={app[1].pet.breed}\n                petAge={app[1].pet.age}\n                id={app[3]}\n              />\n            ))}\n          </div>\n        ) : (\n          <h3 style={{ color: \"white\" }}>\n            There are no pets left at the moment\n          </h3>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default AdminApplications;\n","var userjson = \n{\n  pages: [\n   {\n    name: \"page1\",\n    elements: [\n     {\n      type: \"dropdown\",\n      name: \"AgeGroup\",\n      title: \"What is your Age group?\",\n      isRequired: true,\n      choices: [\n       {\n        value: \"0\",\n        text: \"Under 18\"\n       },\n       {\n        value: \"18\",\n        text: \"18-30\"\n       },\n       {\n        value: \"30\",\n        text: \"30-50\"\n       },\n       {\n        value: \"50\",\n        text: \"50+\"\n       }\n      ]\n     },\n     {\n      type: \"panel\",\n      name: \"panel1\",\n      elements: [\n       {\n        type: \"radiogroup\",\n        name: \"PetBefore\",\n        title: \"Have you had a pet before?\",\n        choices: [\n         {\n          value: \"Yes\",\n          text: \"Yes\"\n         },\n         {\n          value: \"No\",\n          text: \"No\"\n         }\n        ],\n        otherText: \"No\"\n       },\n       {\n        type: \"radiogroup\",\n        name: \"OwnPet\",\n        visibleIf: \"{PetBefore} = 'Yes'\",\n        title: \"Do you currently own a pet?\",\n        hideNumber: true,\n        requiredIf: \"{PetBefore} = 'Yes'\",\n        choices: [\n         \"Yes\",\n         \"No\"\n        ]\n       },\n       {\n        type: \"text\",\n        name: \"OwnPetNumber\",\n        visibleIf: \"{OwnPet} = 'Yes' and {PetBefore} = 'Yes'\",\n        title: \"How many pets do you currently own?\",\n        description: \"(Applies to pets that are required to receive vaccines)\",\n        hideNumber: true,\n        requiredIf: \"{OwnPet} = 'Yes'\",\n        inputType: \"number\",\n        min: \"1\",\n        max: \"99\"\n       },\n       {\n        type: \"radiogroup\",\n        name: \"OwnPetVaccine\",\n        visibleIf: \"{OwnPet} = 'Yes' and {PetBefore} = 'Yes'\",\n        title: \"Are your pets up to date with vaccines?\",\n        hideNumber: true,\n        requiredIf: \"{OwnPet} = 'Yes'\",\n        choices: [\n         {\n          value: \"Yes\",\n          text: \"Yes\"\n         },\n         {\n          value: \"No\",\n          text: \"No\"\n         }\n        ]\n       }\n      ]\n     },\n     {\n      type: \"radiogroup\",\n      name: \"Living\",\n      title: \"What best describes your living environment?\",\n      isRequired: true,\n      choices: [\n       {\n        value: \"House\",\n        text: \"House\"\n       },\n       {\n        value: \"Condo\",\n        text: \"Condo\"\n       },\n       {\n        value: \"Townhome\",\n        text: \"Townhome\"\n       },\n       {\n        value: \"No Yard\",\n        text: \"No Yard\"\n       },\n       {\n        value: \"Large Yard\",\n        text: \"Large Yard\"\n       },\n       {\n        value: \"Small Yard\",\n        text: \"Small Yard\"\n       },\n       {\n        value: \"Acreage\",\n        text: \"Acreage\"\n       }\n      ],\n      hasOther: true,\n      noneText: \"Acreage\",\n      otherText: \"Apartment\"\n     },\n     {\n      type: \"multipletext\",\n      name: \"People\",\n      title: \"Please input the number of people in your household in their age group:\",\n      description: \"Put 0 for none\\n\",\n      isRequired: true,\n      items: [\n       {\n        name: \"Adult\",\n        isRequired: true,\n        inputType: \"number\",\n        title: \"Adults (18+)\"\n       },\n       {\n        name: \"Teenagers\",\n        isRequired: true,\n        inputType: \"number\",\n        title: \"Teenagers (13-17)\"\n       },\n       {\n        name: \"Children\",\n        isRequired: true,\n        inputType: \"number\",\n        title: \"Children (Below 13)\"\n       }\n      ]\n     },\n     {\n      type: \"panel\",\n      name: \"panel2\",\n      elements: [\n       {\n        type: \"radiogroup\",\n        name: \"HaveVet\",\n        title: \"Do you have access to a Veterinarian?\",\n        isRequired: true,\n        choices: [\n         {\n          value: \"Yes\",\n          text: \"Yes\"\n         },\n         {\n          value: \"No\",\n          text: \"No\"\n         }\n        ]\n       },\n       {\n        type: \"dropdown\",\n        name: \"GotoVet\",\n        visibleIf: \"{HaveVet} = 'Yes'\",\n        title: \"How often should your pet be examined by a veterinarian?\",\n        hideNumber: true,\n        requiredIf: \"{HaveVet} = 'Yes'\",\n        choices: [\n         {\n          value: \"Bi-Annually\",\n          text: \"Bi-Annually\"\n         },\n         {\n          value: \"Annually\",\n          text: \"Annually\"\n         },\n         {\n          value: \"A Month\",\n          text: \"A Month\"\n         }\n        ]\n       }\n      ]\n     },\n     {\n      type: \"checkbox\",\n      name: \"PetDiet\",\n      title: \"What is the best diet for your pet?\",\n      description: \"(Check all that applies)\",\n      isRequired: true,\n      choices: [\n       {\n        value: \"Dry\",\n        text: \"Dry\"\n       },\n       {\n        value: \"Wet\",\n        text: \"Wet\"\n       },\n       {\n        value: \"Raw\",\n        text: \"Raw\"\n       },\n       {\n        value: \"Homemade\",\n        text: \"Homemade\"\n       },\n       {\n        value: \"Leftovers\",\n        text: \"Leftovers\"\n       },\n       {\n        value: \"Vet Recommended\",\n        text: \"Vet Recommended\"\n       }\n      ],\n      hasOther: true\n     },\n     {\n      type: \"radiogroup\",\n      name: \"PetCost\",\n      title: \"How much do you think you'll spend annually on your pet?\",\n      isRequired: true,\n      choices: [\n       {\n        value: \"100\",\n        text: \"$100-500\"\n       },\n       {\n        value: \"500\",\n        text: \"$500-1000\"\n       },\n       {\n        value: \"1000\",\n        text: \"$1000-2000\"\n       },\n       {\n        value: \"2000\",\n        text: \"$2000+\"\n       }\n      ]\n     },\n     {\n      type: \"checkbox\",\n      name: \"PetImportance\",\n      title: \"It is very important that my pet...\",\n      description: \"(Check all that applies)\",\n      choices: [\n       {\n        value: \"Is friendly with Children\",\n        text: \"Is friendly with Children\"\n       },\n       {\n        value: \"Is friendly with Other Pets\",\n        text: \"Is friendly with Other Pets\"\n       },\n       {\n        value: \"Is friendly with Visitors\",\n        text: \"Is friendly with Visitors\"\n       },\n       {\n        value: \"Enjoys human touch\",\n        text: \"Enjoys human touch\"\n       },\n       {\n        value: \"Is Calm\",\n        text: \"Is Calm\"\n       },\n       {\n        value: \"Is Playful\",\n        text: \"Is Playful\"\n       },\n       {\n        value: \"Is Independent\",\n        text: \"Is Independent\"\n       }\n      ],\n      hasNone: true,\n      hasSelectAll: true\n     },\n     {\n      type: \"checkbox\",\n      name: \"PetTraining\",\n      title: \"Which of the following would you be willing to train your pet with?\",\n      description: \"(Check if the skill applies to your pet and you are willing to train it)\",\n      choices: [\n       {\n        value: \"House Training\",\n        text: \"House Training\"\n       },\n       {\n        value: \"Separation Anxiety\",\n        text: \"Separation Anxiety\"\n       },\n       {\n        value: \"Food and Toy Possessiveness\",\n        text: \"Food and Toy Possessiveness\"\n       },\n       {\n        value: \"Shy Behaviour\",\n        text: \"Shy Behaviour\"\n       },\n       {\n        value: \"Aggression\",\n        text: \"Aggression\"\n       },\n       {\n        value: \"Socialization\",\n        text: \"Socialization\"\n       },\n       {\n        value: \"Leash\",\n        text: \"Leash (If applicable)\"\n       }\n      ],\n      hasNone: true\n     },\n     {\n      type: \"text\",\n      name: \"FullLegalName\",\n      title: \"Please Input your Full Legal Name\",\n      isRequired: true\n     }\n    ]\n   }\n  ],\n  showPreviewBeforeComplete: \"showAnsweredQuestions\"\n }\n\nexport { userjson };","import React from \"react\";\nimport * as Survey from \"survey-react\";\nimport \"./Questionnaire.css\";\nimport \"survey-react/survey.css\";\nimport { userjson } from \"./UserQuest.js\";\n\nimport {\n  apiSetQuestionnaireData,\n  apiGetQuestionnaireData,\n} from \"../../api/user\";\n\nclass Questionnaire extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isCompleted: false,\n      questionnaireData: {},\n    };\n\n    this.json = userjson;\n    this.onCompleteComponent = this.onCompleteComponent.bind(this);\n  }\n\n  //attempt to pre-populate questionnaire data\n  async componentDidMount() {\n    try {\n      // updated the database with the new information for the user\n      const questionnaireData = await apiGetQuestionnaireData();\n\n      if (questionnaireData) {\n        this.setState({ questionnaireData: questionnaireData });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async onCompleteComponent(survey) {\n    console.log(survey.valuesHash);\n\n    try {\n      // updated the database with the new information for the user\n      await apiSetQuestionnaireData(survey.valuesHash);\n\n      this.setState({ isCompleted: true });\n      this.props.history.push(\"/swiper\");\n    } catch (error) {\n      console.log(error);\n      alert(\"Unable to submit questionnaire responses, please try again.\");\n    }\n  }\n\n  render() {\n    Survey.StylesManager.ThemeColors[\"default\"][\"$main-color\"] = \"#1A8FE6\";\n    Survey.StylesManager.applyTheme();\n\n    //initializing questions\n    let survey = new Survey.Model(this.json);\n\n    //settings answers, if we have any\n    survey.data = this.state.questionnaireData;\n\n    return (\n      <div className=\"Questionnaire\">\n        <Survey.Survey\n          model={survey}\n          showCompletedPage={false}\n          onComplete={this.onCompleteComponent}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Questionnaire;\n","import React from \"react\";\nimport * as Survey from \"survey-react\";\nimport \"./Questionnaire.css\";\nimport \"survey-react/survey.css\";\nimport { userjson } from \"./UserQuest.js\";\n\nimport {\n  apiSetQuestionnaireData,\n  apiGetQuestionnaireData,\n  apiGetApplications,\n} from \"../../api/user\";\n\nclass Questionnaire extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isCompleted: false,\n      questionnaireData: {},\n    };\n\n    this.json = userjson;\n    this.onCompleteComponent = this.onCompleteComponent.bind(this);\n  }\n\n  //attempt to pre-populate questionnaire data\n  async componentDidMount() {\n    try {\n      // updated the database with the new information for the user\n\n      // get id\n      let id = this.props.history.location.pathname.split(\"/\");\n      if (id.length === 3) {\n        id = id[2];\n\n        let apps = await apiGetApplications();\n        apps = apps.filter((app) => app.id === id)[0];\n        let questionnaireData = apps.questionnaire;\n\n        if (questionnaireData) {\n          this.setState({ questionnaireData: questionnaireData });\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async onCompleteComponent(survey) {\n    console.log(survey.valuesHash);\n\n    try {\n      // updated the database with the new information for the user\n      await apiSetQuestionnaireData(survey.valuesHash);\n\n      this.setState({ isCompleted: true });\n      this.props.history.push(\"/swiper\");\n    } catch (error) {\n      console.log(error);\n      alert(\"Unable to submit questionnaire responses, please try again.\");\n    }\n  }\n\n  render() {\n    Survey.StylesManager.ThemeColors[\"default\"][\"$main-color\"] = \"#1A8FE6\";\n    Survey.StylesManager.applyTheme();\n\n    //initializing questions\n    let survey = new Survey.Model(this.json);\n\n    //settings answers, if we have any\n    survey.data = this.state.questionnaireData;\n\n    //Read Only\n    survey.mode = \"display\";\n    return (\n      <div className=\"Questionnaire\">\n        <Survey.Survey\n          model={survey}\n          showCompletedPage={false}\n          onComplete={this.onCompleteComponent}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Questionnaire;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { apiLogout } from \"../api/auth\";\n\nclass Logout extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  logout = async () =>  {\n    try{\n      await apiLogout();\n      alert('You have successfully logged out'); \n      localStorage.removeItem('isLoggedIn');\n      this.props.app.setState({\n        currUser: null,\n      });\n      this.props.history.push('/');\n    } catch(error) {\n      console.log(error); \n      alert('The email or password that you have entered is incorrect!');\n    }    \n  }\n\n  stay() {\n    this.props.history.goBack();\n  }\n  render() {\n    return (\n      <div>\n        <p>Are you sure that you would like to logout?</p>\n        <br />\n        <Button size=\"small\" onClick={() => this.logout()}>\n          Yes\n        </Button>\n        <Button size=\"small\" onClick={() => this.stay()}>\n          No\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default Logout;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { Alert } from \"react-bootstrap\";\nimport \"./App.css\";\n\nimport \"./components/Footer/Footer\";\nimport Login from \"./components/Login/Login\";\nimport Intro from \"./components/Intro/Intro\";\nimport Navigation from \"./components/Navigation\";\nimport SignUp from \"./components/Signup/Signup\";\nimport About from \"./components/About\";\nimport Applications from \"./components/Applications/Applications\";\nimport PetPosting from \"./components/PetPosting/PetPosting\";\nimport Profile from \"./components/Profile/Profile\";\nimport PostSwiper from \"./components/PostSwiper/PostSwiper\";\nimport AdminApplications from \"./components/AdminApplications/AdminApplications\";\nimport Questionnaire from \"./components/Questionnaire/Questionnaire\";\nimport QuestionnaireAdmin from \"./components/Questionnaire/QuestionnaireAdmin\";\nimport Logout from \"./components/Logout\";\nimport { apiCheckSession } from \"./api/auth\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super();\n\n    //state object, to be accessible by children elements\n    this.state = {\n      currUser: null,\n      isMounted: false,\n    };\n  }\n\n  // check to see if the user has logged in\n  async componentDidMount() {\n    try {\n      const data = await apiCheckSession();\n      if (data) {\n        this.setState({ currUser: data.user, isMounted: true });\n      }\n    } catch (error) {\n      console.log(error);\n      localStorage.removeItem(\"isLoggedIn\");\n      this.setState({ isMounted: true });\n    }\n  }\n\n  isValid() {\n    let { currUser, isMounted } = this.state,\n      isLoggedIn = localStorage.getItem(\"isLoggedIn\");\n    if (isLoggedIn && !currUser) return false;\n    return true;\n  }\n\n  render() {\n    let { currUser, isMounted } = this.state;\n    return this.isValid() ? (\n      <Router>\n        <div className=\"App\">\n          <Navigation app={this} />\n          <div className=\"appContent\">\n            <Switch>\n              <Route\n                exact\n                path={[\"/\", \"/intro\"]}\n                render={(props) => (\n                  <div>\n                    {currUser ? (\n                      currUser.admin ? (\n                        <Redirect to={{ pathname: \"/adminapps\" }} />\n                      ) : (\n                        <Redirect to={{ pathname: \"/swiper\" }} />\n                      )\n                    ) : (\n                      <Intro {...props} app={this} />\n                    )}\n                  </div>\n                )}\n              />\n              <Route\n                exact\n                path=\"/login\"\n                render={(props) => (\n                  <div>\n                    {!currUser ? (\n                      <Login {...props} app={this} />\n                    ) : (\n                      <div>\n                        <Alert variant=\"primary\" dismissible transition>\n                          You have already logged in.\n                        </Alert>\n                        {currUser.admin ? (\n                          <Redirect to={{ pathname: \"/adminapps\" }} />\n                        ) : (\n                          <Redirect to={{ pathname: \"/swiper\" }} />\n                        )}\n                      </div>\n                    )}\n                  </div>\n                )}\n              />\n              <Route\n                exact\n                path=\"/signup\"\n                render={(props) => (\n                  <div>\n                    {!currUser ? (\n                      <SignUp {...props} app={this} />\n                    ) : (\n                      <div>\n                        <Alert variant=\"primary\" dismissible transition>\n                          You have already logged in.\n                        </Alert>\n                        {currUser.admin ? (\n                          <Redirect to={{ pathname: \"/swiper\" }} />\n                        ) : (\n                          <Redirect to={{ pathname: \"/adminapps\" }} />\n                        )}\n                      </div>\n                    )}\n                  </div>\n                )}\n              />\n              <Route exact path=\"/about\">\n                <About />\n              </Route>\n              <Route\n                exact\n                path=\"/applications\"\n                render={(props) => (\n                  <div>\n                    {currUser ? (\n                      currUser.admin ? (\n                        <Redirect to={{ pathname: \"/adminapps\" }} />\n                      ) : (\n                        <Applications {...props} app={this} />\n                      )\n                    ) : (\n                      <div>\n                        <Alert variant=\"primary\" dismissible transition>\n                          You need to login to access this page.\n                        </Alert>\n                        <Redirect to={{ pathname: \"/login\" }} />\n                      </div>\n                    )}\n                  </div>\n                )}\n              />\n              <Route\n                exact\n                path=\"/postapet\"\n                render={(props) => (\n                  <div>\n                    {currUser ? (\n                      currUser.admin ? (\n                        <PetPosting {...props} app={this} />\n                      ) : (\n                        <div>This page is only accessible to clinics!</div>\n                      )\n                    ) : (\n                      <Redirect to={{ pathname: \"/login\" }} />\n                    )}\n                  </div>\n                )}\n              />\n              <Route\n                exact\n                path=\"/profile\"\n                render={(props) =>\n                  currUser ? (\n                    <div>\n                      <Profile {...props} app={this} />\n                    </div>\n                  ) : (\n                    <div>\n                      <Login {...props} app={this} />\n                    </div>\n                  )\n                }\n              />\n              <Route\n                path=\"/swiper\"\n                render={(props) => (\n                  <div>\n                    {currUser ? (\n                      currUser.admin ? (\n                        <div>\n                          This page is only accessible to individuals looking\n                          for pets.\n                          <br />\n                          Please login using your personal account.\n                        </div>\n                      ) : (\n                        <PostSwiper {...props} app={this} />\n                      )\n                    ) : (\n                      <Redirect to={{ pathname: \"/login\" }} />\n                    )}\n                  </div>\n                )}\n              />\n              <Route\n                exact\n                path=\"/adminapps\"\n                render={(props) =>\n                  currUser ? (\n                    currUser.admin ? (\n                      <div>\n                        {\" \"}\n                        <AdminApplications {...props} app={this} />{\" \"}\n                      </div>\n                    ) : (\n                      <div>You are not an admin user!</div>\n                    )\n                  ) : (\n                    <div>You need to login first.</div>\n                  )\n                }\n              />\n              <Route\n                exact\n                path=\"/questionnaire\"\n                render={(props) => (\n                  <div>\n                    <Questionnaire {...props} app={this} />\n                  </div>\n                )}\n              />\n              <Route\n                path=\"/userqs\"\n                render={(props) =>\n                  this.currUser ? (\n                    this.currUser.admin ? (\n                      <QuestionnaireAdmin {...props} app={this} />\n                    ) : (\n                      <div>You need to be an admin to view this page.</div>\n                    )\n                  ) : (\n                    <Redirect to={{ pathname: \"/login\" }} />\n                  )\n                }\n              />\n              <Route\n                exact\n                path=\"/logout\"\n                render={(props) => (\n                  <div>\n                    <Logout {...props} app={this} />\n                  </div>\n                )}\n              />\n              {/* 404 if the URL cannot be found */}\n              <Route render={() => <div>404 URL Not Found.</div>} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    ) : (\n      \"\"\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./global.js\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}